{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xff6f1af8468e6ed3743387d7ace0c6a1600b592700b1f3625ae63b3332206d9d",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "918424",
    "logsBloom": "0x
    "blockHash": "0x18401a549d958830bffe4f643bed2d9c47847fbeffa926f43ebe80ffc5cb41d9",
    "transactionHash": "0xff6f1af8468e6ed3743387d7ace0c6a1600b592700b1f3625ae63b3332206d9d",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "918424",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "0ac5fc39ef21ca4d8c5fa8f79c5171db",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\n//GetFunds from users\\n//Withdraw funds\\n//Set a minimum funding value in USD\\n\\nimport \\\"./PriceConverter1.sol\\\";\\n\\ncontract FundMe {\\n    //make it public bcoz we want everybody can call this function\\n    //Want to be able to set a minimum fund amount in USD\\n    //1. How do we send ETH to this contract\\n    //keyword \\\"payable\\\" makes the button to red color\\n\\n    using PriceConverter1 for uint256;\\n\\n    uint256 public minimumUsd = 50 * 1e18; //1 * 10 ** 18\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        owner = msg.sender; //where msg.sender is whomever deployed the contract\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        //\\\"require\\\" set minimum of price\\n        //If first section below is false, then revert the error message followed by\\n        //revert means undo any action before, and send remaining gas back\\n        //number = 8;\\n        //require(msg.value > 1e18, \\\"Didn't send enough!\\\"); //1e18 == 1 * 10 ** 18 == 1000000000000000000 == 1ETH\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= minimumUsd,\\n            \\\"Didn't send enough!\\\"\\n        ); //1e18 == 1 * 10 ** 18 == 1000000000000000000 == 1ETH 18 decimals\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        //user modifier to make sure the ownership is checked before reading the content of the function\\n        //require(msg.sender == owner, \\\"Sender is not the owner!\\\"); // == means checking two variables are equivilant\\n        //for loop\\n        //[1,2,3,4]\\n        //0. 1. 2. 3. looping turn\\n        /*starting index, ending index, step amount */\\n        //e.g. 0, 10, 2 that means 0 2 4 6 8 10\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        //reset the array\\n        funders = new address[](0); //reset to 0 as a brand new array\\n        //actually withdraw the funds\\n\\n        //transfer\\n\\n        //msg.sender = address\\n        //payable(msg.sender) = payable address\\n        //payable (msg.sender).transfer(address(this).balance);  //keyword \\\"this\\\" means this whole contract\\n\\n        //send\\n        //bool sendSuccess = payble(msg.sender).send(address(this).balance);\\n        //require(sendSuccess, \\\"Send failed\\\");\\n\\n        //call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\"); //can call other contracts' function\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Sender is not the owner!\\\"); // == means checking two variables are equivilant\\n        _; //_; means process the rest of code\\n    }\\n}\\n\",\"keccak256\":\"0x482d30a705a771aaafe8be4bf8d1cb404098219e5bbc52570c17864ed99d8c4f\",\"license\":\"MIT\"},\"contracts/PriceConverter1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter1 {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    )\\n        internal\\n        view\\n        returns (\\n            uint256 // ABI\\n        )\\n    // Address 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n    //AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e).version //call version function on the contract specified\\n    //AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //    0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n    {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData(); //return whole bunch of variable of the lastestRoundData function under AggregatorV3Interface\\n        //remove other variable to get only the price of ETH in terms of USD //3000.00000000\\n        return uint256(answer * 1e10); //1**10 == 10000000000\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        //3000_000000000000000000 = ETH/ USD price\\n        //1_000000000000000000 ETH\\n        uint ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x2ccd80bf8a1b4e61d23e4bb8459c8a4aa4e20781de188a520e98f3f40dd249ec\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526802b5e3af16b188000060005534801561001d57600080fd5b5060405162000fd538038062000fd58339818101604052810190610041919061012c565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610159565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100f9826100ce565b9050919050565b610109816100ee565b811461011457600080fd5b50565b60008151905061012681610100565b92915050565b600060208284031215610142576101416100c9565b5b600061015084828501610117565b91505092915050565b610e6c80620001696000396000f3fe6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100f45780638da5cb5b1461011f578063b60d42881461014a578063dc0d3dff1461015457610070565b8063098de820146100755780633ccfd60b146100a05780633e47d6f3146100b7575b600080fd5b34801561008157600080fd5b5061008a610191565b6040516100979190610744565b60405180910390f35b3480156100ac57600080fd5b506100b5610197565b005b3480156100c357600080fd5b506100de60048036038101906100d991906107c2565b6103e3565b6040516100eb9190610744565b60405180910390f35b34801561010057600080fd5b506101096103fb565b604051610116919061084e565b60405180910390f35b34801561012b57600080fd5b50610134610421565b6040516101419190610878565b60405180910390f35b610152610447565b005b34801561016057600080fd5b5061017b600480360381019061017691906108bf565b610569565b6040516101889190610878565b60405180910390f35b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610949565b60405180910390fd5b60005b6001805490508110156102d35760006001828154811061024d5761024c610969565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102cb906109c7565b91505061022a565b50600067ffffffffffffffff8111156102ef576102ee610a10565b5b60405190808252806020026020018201604052801561031d5781602001602082028036833780820191505090505b5060019080519060200190610333929190610684565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161035a90610a70565b60006040518083038185875af1925050503d8060008114610397576040519150601f19603f3d011682016040523d82523d6000602084013e61039c565b606091505b50509050806103e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d790610ad1565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005461047f600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105a890919063ffffffff16565b10156104c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b790610b3d565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6001818154811061057957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105b4836105e4565b90506000670de0b6b3a764000085836105cd9190610b5d565b6105d79190610be6565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561062d57600080fd5b505afa158015610641573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106659190610ca4565b5050509150506402540be4008161067c9190610d1f565b915050919050565b8280548282559060005260206000209081019282156106fd579160200282015b828111156106fc5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106a4565b5b50905061070a919061070e565b5090565b5b8082111561072757600081600090555060010161070f565b5090565b6000819050919050565b61073e8161072b565b82525050565b60006020820190506107596000830184610735565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078f82610764565b9050919050565b61079f81610784565b81146107aa57600080fd5b50565b6000813590506107bc81610796565b92915050565b6000602082840312156107d8576107d761075f565b5b60006107e6848285016107ad565b91505092915050565b6000819050919050565b600061081461080f61080a84610764565b6107ef565b610764565b9050919050565b6000610826826107f9565b9050919050565b60006108388261081b565b9050919050565b6108488161082d565b82525050565b6000602082019050610863600083018461083f565b92915050565b61087281610784565b82525050565b600060208201905061088d6000830184610869565b92915050565b61089c8161072b565b81146108a757600080fd5b50565b6000813590506108b981610893565b92915050565b6000602082840312156108d5576108d461075f565b5b60006108e3848285016108aa565b91505092915050565b600082825260208201905092915050565b7f53656e646572206973206e6f7420746865206f776e6572210000000000000000600082015250565b60006109336018836108ec565b915061093e826108fd565b602082019050919050565b6000602082019050818103600083015261096281610926565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109d28261072b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a0557610a04610998565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a5a600083610a3f565b9150610a6582610a4a565b600082019050919050565b6000610a7b82610a4d565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610abb600b836108ec565b9150610ac682610a85565b602082019050919050565b60006020820190508181036000830152610aea81610aae565b9050919050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610b276013836108ec565b9150610b3282610af1565b602082019050919050565b60006020820190508181036000830152610b5681610b1a565b9050919050565b6000610b688261072b565b9150610b738361072b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bac57610bab610998565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bf18261072b565b9150610bfc8361072b565b925082610c0c57610c0b610bb7565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c3681610c17565b8114610c4157600080fd5b50565b600081519050610c5381610c2d565b92915050565b6000819050919050565b610c6c81610c59565b8114610c7757600080fd5b50565b600081519050610c8981610c63565b92915050565b600081519050610c9e81610893565b92915050565b600080600080600060a08688031215610cc057610cbf61075f565b5b6000610cce88828901610c44565b9550506020610cdf88828901610c7a565b9450506040610cf088828901610c8f565b9350506060610d0188828901610c8f565b9250506080610d1288828901610c44565b9150509295509295909350565b6000610d2a82610c59565b9150610d3583610c59565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d7457610d73610998565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610db157610db0610998565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610dee57610ded610998565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e2b57610e2a610998565b5b82820290509291505056fea26469706673582212207ff6c28c21e1a3e6e5f7db34727bd838d8c3f51d3fd3122338ed64ca5578bed364736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100f45780638da5cb5b1461011f578063b60d42881461014a578063dc0d3dff1461015457610070565b8063098de820146100755780633ccfd60b146100a05780633e47d6f3146100b7575b600080fd5b34801561008157600080fd5b5061008a610191565b6040516100979190610744565b60405180910390f35b3480156100ac57600080fd5b506100b5610197565b005b3480156100c357600080fd5b506100de60048036038101906100d991906107c2565b6103e3565b6040516100eb9190610744565b60405180910390f35b34801561010057600080fd5b506101096103fb565b604051610116919061084e565b60405180910390f35b34801561012b57600080fd5b50610134610421565b6040516101419190610878565b60405180910390f35b610152610447565b005b34801561016057600080fd5b5061017b600480360381019061017691906108bf565b610569565b6040516101889190610878565b60405180910390f35b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610949565b60405180910390fd5b60005b6001805490508110156102d35760006001828154811061024d5761024c610969565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102cb906109c7565b91505061022a565b50600067ffffffffffffffff8111156102ef576102ee610a10565b5b60405190808252806020026020018201604052801561031d5781602001602082028036833780820191505090505b5060019080519060200190610333929190610684565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161035a90610a70565b60006040518083038185875af1925050503d8060008114610397576040519150601f19603f3d011682016040523d82523d6000602084013e61039c565b606091505b50509050806103e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d790610ad1565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005461047f600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105a890919063ffffffff16565b10156104c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b790610b3d565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6001818154811061057957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105b4836105e4565b90506000670de0b6b3a764000085836105cd9190610b5d565b6105d79190610be6565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561062d57600080fd5b505afa158015610641573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106659190610ca4565b5050509150506402540be4008161067c9190610d1f565b915050919050565b8280548282559060005260206000209081019282156106fd579160200282015b828111156106fc5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106a4565b5b50905061070a919061070e565b5090565b5b8082111561072757600081600090555060010161070f565b5090565b6000819050919050565b61073e8161072b565b82525050565b60006020820190506107596000830184610735565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078f82610764565b9050919050565b61079f81610784565b81146107aa57600080fd5b50565b6000813590506107bc81610796565b92915050565b6000602082840312156107d8576107d761075f565b5b60006107e6848285016107ad565b91505092915050565b6000819050919050565b600061081461080f61080a84610764565b6107ef565b610764565b9050919050565b6000610826826107f9565b9050919050565b60006108388261081b565b9050919050565b6108488161082d565b82525050565b6000602082019050610863600083018461083f565b92915050565b61087281610784565b82525050565b600060208201905061088d6000830184610869565b92915050565b61089c8161072b565b81146108a757600080fd5b50565b6000813590506108b981610893565b92915050565b6000602082840312156108d5576108d461075f565b5b60006108e3848285016108aa565b91505092915050565b600082825260208201905092915050565b7f53656e646572206973206e6f7420746865206f776e6572210000000000000000600082015250565b60006109336018836108ec565b915061093e826108fd565b602082019050919050565b6000602082019050818103600083015261096281610926565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109d28261072b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a0557610a04610998565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a5a600083610a3f565b9150610a6582610a4a565b600082019050919050565b6000610a7b82610a4d565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610abb600b836108ec565b9150610ac682610a85565b602082019050919050565b60006020820190508181036000830152610aea81610aae565b9050919050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610b276013836108ec565b9150610b3282610af1565b602082019050919050565b60006020820190508181036000830152610b5681610b1a565b9050919050565b6000610b688261072b565b9150610b738361072b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bac57610bab610998565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bf18261072b565b9150610bfc8361072b565b925082610c0c57610c0b610bb7565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c3681610c17565b8114610c4157600080fd5b50565b600081519050610c5381610c2d565b92915050565b6000819050919050565b610c6c81610c59565b8114610c7757600080fd5b50565b600081519050610c8981610c63565b92915050565b600081519050610c9e81610893565b92915050565b600080600080600060a08688031215610cc057610cbf61075f565b5b6000610cce88828901610c44565b9550506020610cdf88828901610c7a565b9450506040610cf088828901610c8f565b9350506060610d0188828901610c8f565b9250506080610d1288828901610c44565b9150509295509295909350565b6000610d2a82610c59565b9150610d3583610c59565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d7457610d73610998565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610db157610db0610998565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610dee57610ded610998565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e2b57610e2a610998565b5b82820290509291505056fea26469706673582212207ff6c28c21e1a3e6e5f7db34727bd838d8c3f51d3fd3122338ed64ca5578bed364736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 56,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "minimumUsd",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}